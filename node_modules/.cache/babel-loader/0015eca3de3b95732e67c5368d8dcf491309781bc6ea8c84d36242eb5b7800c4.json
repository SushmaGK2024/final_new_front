{"ast":null,"code":"// components/Latest.js\n// components/ExperienceCard.js\nimport React,{useState,useEffect}from'react';import{Card,Button}from'react-bootstrap';import axios from'axios';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ExperienceCard=_ref=>{let{experience}=_ref;const{title,description,readMore}=experience;console.log(\"experience : \",experience);const company=experience.company_name;const rollNo=experience.rollno;const roleOffered=experience.role_offered;const overall_experience=experience.overall_experience;const truncatedOverallExperience=overall_experience.slice(0,50)+'...';return/*#__PURE__*/_jsx(Card,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:company}),/*#__PURE__*/_jsx(Card.Text,{children:truncatedOverallExperience}),/*#__PURE__*/_jsx(Link,{to:\"/getexperience/\".concat(experience.experience_id),children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",children:\"Read More\"})})]})});};const Latest=()=>{const[experiences,setExperiences]=useState([]);const[loading,setLoading]=useState(true);const token=localStorage.getItem(\"token\");useEffect(()=>{const fetchData=async()=>{try{const response=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/experience\",{headers:{Authorization:\"Bearer \".concat(token)}});setExperiences(response.data);setLoading(false);}catch(error){console.error('Error fetching experiences:',error);}};fetchData();},[]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}if(!Array.isArray(experiences)){console.error('Experiences is not an array:',experiences);return/*#__PURE__*/_jsx(\"p\",{children:\"Error fetching experiences\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Latest Experiences and Placement Records\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"experiences\",style:{paddingTop:\"100px\"},children:experiences.slice().sort((a,b)=>new Date(b.created_at)-new Date(a.created_at)).map(experience=>/*#__PURE__*/_jsx(ExperienceCard,{experience:experience},experience.experience_id))})]});};export default Latest;","map":{"version":3,"names":["React","useState","useEffect","Card","Button","axios","Link","jsx","_jsx","jsxs","_jsxs","ExperienceCard","_ref","experience","title","description","readMore","console","log","company","company_name","rollNo","rollno","roleOffered","role_offered","overall_experience","truncatedOverallExperience","slice","className","children","Body","Title","Text","to","concat","experience_id","variant","Latest","experiences","setExperiences","loading","setLoading","token","localStorage","getItem","fetchData","response","get","headers","Authorization","data","error","Array","isArray","style","paddingTop","sort","a","b","Date","created_at","map"],"sources":["C:/Users/sushm/OneDrive/Desktop/Git uploads/final_new_front/src/components/Latest.js"],"sourcesContent":["// components/Latest.js\r\n// components/ExperienceCard.js\r\nimport React,{useState, useEffect} from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ExperienceCard = ({ experience }) => {\r\n  const { title, description, readMore } = experience;\r\n  console.log(\"experience : \", experience);\r\n  const company=experience.company_name;\r\n  const rollNo= experience.rollno;\r\n  const roleOffered=experience.role_offered;\r\n  const overall_experience=experience.overall_experience;\r\n  const truncatedOverallExperience = overall_experience.slice(0, 50) + '...';\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <Card.Title>{company}</Card.Title>\r\n        <Card.Text>{truncatedOverallExperience}</Card.Text>\r\n        <Link to={`/getexperience/${experience.experience_id}`}>\r\n          <Button variant=\"primary\">Read More</Button>\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Latest = () => {\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const token= localStorage.getItem(\"token\");\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`https://backendf-fx8p.onrender.com/experiences/experience`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setExperiences(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching experiences:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (!Array.isArray(experiences)) {\r\n    console.error('Experiences is not an array:', experiences);\r\n    return <p>Error fetching experiences</p>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Latest Experiences and Placement Records</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"experiences\" style={{paddingTop:\"100px\"}}>\r\n           {experiences\r\n          .slice()\r\n          .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\r\n          .map((experience) => (\r\n            <ExperienceCard key={experience.experience_id} experience={experience} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Latest;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}