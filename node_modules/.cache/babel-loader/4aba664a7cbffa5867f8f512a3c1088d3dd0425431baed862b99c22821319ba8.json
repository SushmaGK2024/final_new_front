{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Card,Form,Button,Modal}from'react-bootstrap';import{useNavigate,Link}from'react-router-dom';import axios from'axios';import Sentiment from'sentiment';import{Doughnut}from'react-chartjs-2';import'chart.js/auto';import'chartjs-adapter-moment';import'./Searchexperience.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const sentiment=new Sentiment();const calculateSentiment=experiences=>{let totalScore=0;let positiveCount=0;let negativeCount=0;let neutralCount=0;experiences.forEach(experience=>{const result=sentiment.analyze(experience.overall_experience);totalScore+=result.score;if(result.score>0){positiveCount++;}else if(result.score<0){negativeCount++;}else{neutralCount++;}});const totalCount=experiences.length;const positivePercentage=positiveCount/totalCount*100;const negativePercentage=negativeCount/totalCount*100;const neutralPercentage=neutralCount/totalCount*100;return{sentimentScore:totalScore/totalCount,positivePercentage,negativePercentage,neutralPercentage};};const getDifficultyLevel=experiences=>{let totalScore=0;experiences.forEach(experience=>{const result=sentiment.analyze(experience.overall_experience);totalScore+=result.score;});if(totalScore/experiences.length<-2)return'Difficult';if(totalScore/experiences.length>2)return'Easy';return'Moderate';};const getHiringPercentage=experiences=>{let hiredCount=0;experiences.forEach(experience=>{if(experience.placed){hiredCount++;}});const totalCount=experiences.length;return hiredCount/totalCount*100;};const CompanyQuestionsModal=_ref=>{let{show,handleClose,company}=_ref;const[technicalQuestions,setTechnicalQuestions]=useState([]);const[hrQuestions,setHRQuestions]=useState([]);useEffect(()=>{const fetchRecentQuestions=async()=>{try{const technicalResponse=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/recent-technical-questions/\".concat(company));setTechnicalQuestions(technicalResponse.data);const hrResponse=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/recent-hr-questions/\".concat(company));setHRQuestions(hrResponse.data);}catch(error){console.error('Error fetching recent questions:',error);}};if(show){fetchRecentQuestions();}},[show,company]);return/*#__PURE__*/_jsxs(Modal,{show:show,onHide:handleClose,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[\"Recent Questions for \",company]})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Recent Technical Questions:\"}),/*#__PURE__*/_jsx(\"ul\",{children:technicalQuestions.map((question,index)=>/*#__PURE__*/_jsx(\"li\",{children:question},index))}),/*#__PURE__*/_jsx(\"h5\",{children:\"Recent HR Questions:\"}),/*#__PURE__*/_jsx(\"ul\",{children:hrQuestions.map((question,index)=>/*#__PURE__*/_jsx(\"li\",{children:question},index))})]}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleClose,children:\"Close\"})})]});};const QuestionsDropdown=_ref2=>{let{questions,onHide}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",children:[/*#__PURE__*/_jsx(\"ul\",{className:\"dropdown-content\",children:questions.map((question,index)=>/*#__PURE__*/_jsx(\"li\",{children:question},index))}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onHide,children:\"Close\"})]});};const SearchExperience=props=>{const{currrollno}=props;const history=useNavigate();useEffect(()=>{if(!currrollno){// Redirect to sign-in if currrollno is null\nhistory('/');}},[currrollno]);const inputRef=useRef(null);const[query,setQuery]=useState('');const[filters,setFilters]=useState({});const[sortBy,setSortBy]=useState('created_at');const[sortOrder,setSortOrder]=useState('desc');const[experiences,setExperiences]=useState([]);const[loading,setLoading]=useState(true);const token=localStorage.getItem('token');const[search,setSearch]=useState(false);const[companyNames,setCompanyNames]=useState([]);const[years,setYears]=useState([]);const[roles,setRoles]=useState([]);const[showTechnicalQuestions,setShowTechnicalQuestions]=useState(false);const[showHRQuestions,setShowHRQuestions]=useState(false);const[selectedCompany,setSelectedCompany]=useState('');const[technicalQuestions,setTechnicalQuestions]=useState([]);const[hrQuestions,setHRQuestions]=useState([]);useEffect(()=>{const fetchData=async()=>{try{const response=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/experience\",{headers:{Authorization:\"Bearer \".concat(token)}});setExperiences(response.data.sort((a,b)=>new Date(b.created_at)-new Date(a.created_at)));setLoading(false);// Fetch unique company names, years, and roles from the database\nconst companyNamesResponse=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/experience\",{headers:{Authorization:\"Bearer \".concat(token)}});//const coresponse = await axios.get('https://backendf-fx8p.onrender.com/experiences');\nconst companyNames=[...new Set(companyNamesResponse.data.map(experience=>experience.company_name))];setCompanyNames(companyNames);console.log(\"company names : \",companyNames);const yearsResponse=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/years\",{headers:{Authorization:\"Bearer \".concat(token)}});setYears(yearsResponse.data.map(year=>year.year));const rolesResponse=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/roles\",{headers:{Authorization:\"Bearer \".concat(token)}});setRoles(rolesResponse.data.map(role=>role.role_offered));}catch(error){console.error('Error fetching experiences:',error);}};fetchData();},[]);const handleSearch=async event=>{event.preventDefault();try{console.log(\"filters : \",filters);console.log(\"sortby : \",sortBy);console.log(\"sortOrder : \",sortOrder);const response=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/search\",{params:{query,filters,sortBy,sortOrder},headers:{Authorization:\"Bearer \".concat(token)}});query.length>0?setSearch(true):setSearch(false);setExperiences(response.data);setLoading(false);}catch(error){console.error('Error searching experiences:',error);}};const handleFilterChange=event=>{const{name,value}=event.target;setFilters({...filters,[name]:value});};const handleSortChange=event=>{setSortBy(event.target.value);};const handleSortOrderChange=event=>{setSortOrder(event.target.value);};const renderHorizontalBar=difficulty=>{const barLength=10;// total length of the bar\nconst filledChar='█';const emptyChar='▒';let filledLength=0;let barColor='';switch(difficulty){case'Easy':filledLength=4;barColor='#4CAF50';// green\nbreak;case'Moderate':filledLength=7;barColor='#FFEB3B';// yellow\nbreak;case'Difficult':filledLength=10;barColor='#F44336';// red\nbreak;default:filledLength=0;break;}const bar=filledChar.repeat(filledLength)+emptyChar.repeat(barLength-filledLength);return/*#__PURE__*/_jsxs(\"div\",{className:\"horizontal-bar\",children:[difficulty,\": \",bar]});};const CompanyhrQuestions=_ref3=>{let{companyName,questions,onHide,ishr}=_ref3;console.log(\"in company question\");console.log(\"questions : \",questions);// console.log(typeof(questions[0].hr_questions))\n// Function to split questions string into an array of individual questions\n// fetchRecenthrQuestions(companyName);\nconst splitQuestions=questionsString=>{console.log(\"called split function\");return questionsString&&typeof questionsString==='string'?questionsString.split('\\n').slice(0,5):[];};console.log(ishr);return/*#__PURE__*/_jsx(\"div\",{class:\"\",children:/*#__PURE__*/_jsx(\"div\",{class:\"\",id:\"menu-toggle\",children:ishr?/*#__PURE__*/_jsx(\"ul\",{children:questions.map((question,index)=>/*#__PURE__*/_jsx(React.Fragment,{children:question.hr_questions&&typeof question.hr_questions==='string'&&splitQuestions(question.hr_questions).map((q,idx)=>/*#__PURE__*/_jsx(\"li\",{children:q},\"\".concat(index,\"-\").concat(idx)))},index))}):{}})});};const CompanyQuestions=_ref4=>{let{companyName,questions,onHide,ishr}=_ref4;console.log(\"in company question\");console.log(\"questions : \",questions);// fetchRecenttechQuestions(companyName);\n// console.log(typeof(questions[0].hr_questions))\n// Function to split questions string into an array of individual questions\nconst splitQuestions=questionsString=>{console.log(\"called split function\");return questionsString&&typeof questionsString==='string'?questionsString.split('\\n').slice(0,5):[];};console.log(ishr);return/*#__PURE__*/_jsx(\"div\",{class:\"\",children:/*#__PURE__*/_jsx(\"div\",{class:\"\",id:\"menu-toggle\",children:/*#__PURE__*/_jsx(\"ul\",{children:questions.map((question,index)=>/*#__PURE__*/_jsx(React.Fragment,{children:question.technical_questions&&typeof question.technical_questions==='string'&&splitQuestions(question.technical_questions).map((q,idx)=>/*#__PURE__*/_jsx(\"li\",{children:q},\"\".concat(index,\"-\").concat(idx)))},index))})})});};const RenderCompanyStats=()=>{const companies={};experiences.forEach(exp=>{if(!companies[exp.company_name]){companies[exp.company_name]=[];}companies[exp.company_name].push(exp);});const companyStats={};for(let company in companies){companyStats[company]={sentiment:calculateSentiment(companies[company]),difficulty:getDifficultyLevel(companies[company]),hiring:getHiringPercentage(companies[company]),ctc:{low:Math.min(...companies[company].map(exp=>exp.ctc)),avg:companies[company].reduce((sum,exp)=>sum+exp.ctc,0)/companies[company].length,high:Math.max(...companies[company].map(exp=>exp.ctc))}};}const handleTechnicalQuestionsClick=company=>{console.log(\"company tech: \",company);setSelectedCompany(company);// Fetch recent technical questions for the selected company from the backend\n// Update the technicalQuestions state\nconst fetchRecenttechQuestions=async()=>{try{const technicalResponse=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/recent-technical-questions/\".concat(company),{headers:{Authorization:\"Bearer \".concat(token)}});setTechnicalQuestions(technicalResponse.data);}catch(error){console.error('Error fetching recent questions:',error);}};fetchRecenttechQuestions();//showTechnicalQuestions===false? setShowTechnicalQuestions(true) : setShowTechnicalQuestions(false);\n};const handleHRQuestionsClick=company=>{console.log(\"in handle hr : \",company);const fetchRecenthrQuestions=async()=>{try{const hrResponse=await axios.get(\"https://backendf-fx8p.onrender.com/experiences/recent-hr-questions/\".concat(company),{headers:{Authorization:\"Bearer \".concat(token)}});setHRQuestions(hrResponse.data);}catch(error){console.error('Error fetching recent questions:',error);}};setSelectedCompany(company);// Fetch recent HR questions for the selected company from the backend\n// Update the hrQuestions state\nfetchRecenthrQuestions();// showHRQuestions===false? setShowHRQuestions(true) : setShowHRQuestions(false);\nconsole.log(\"Show hr \",showHRQuestions);};return Object.keys(companyStats).map((company,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},className:\"companystats-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"company-title\",children:/*#__PURE__*/_jsx(\"h2\",{style:{paddingLeft:\"20%\"},children:company})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"doughnut-chart-container\",children:/*#__PURE__*/_jsx(Doughnut,{data:{labels:['Positive','Neutral','Negative'],datasets:[{data:[companyStats[company].sentiment.positivePercentage,companyStats[company].sentiment.neutralPercentage,companyStats[company].sentiment.negativePercentage],backgroundColor:['green','grey','red']}]},options:{maintainAspectRatio:false,responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Sentiment Analysis'}},scales:{x:{grid:{display:false}},y:{grid:{display:false}}}}})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",width:\"40%\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"},children:[\"Difficulty: \",renderHorizontalBar(companyStats[company].difficulty),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{style:{paddingRight:\"5px\"},children:[\"Hiring Percentage: \",companyStats[company].hiring.toFixed(2),\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"CTC Range: \",companyStats[company].ctc.low.toFixed(2),\" - \",companyStats[company].ctc.avg.toFixed(2),\" - \",companyStats[company].ctc.high.toFixed(2)]})]})]},index),/*#__PURE__*/_jsxs(\"div\",{class:\"tabs\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"tab\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"tabsinput\",type:\"checkbox\",id:\"tech-\".concat(index),onClick:()=>handleTechnicalQuestionsClick(company)}),/*#__PURE__*/_jsxs(\"label\",{class:\"tab-label\",htmlFor:\"tech-\".concat(index),children:[\"Recent Technical Questions for \",company]}),/*#__PURE__*/_jsx(\"div\",{class:\"tab-content\",children:selectedCompany===company&&/*#__PURE__*/_jsx(CompanyQuestions,{companyName:selectedCompany,questions:technicalQuestions,onHide:()=>setShowTechnicalQuestions(true),ishr:false})})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"tab\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"tabsinput\",type:\"checkbox\",id:\"hr-\".concat(index),onClick:()=>handleHRQuestionsClick(company)}),/*#__PURE__*/_jsxs(\"label\",{class:\"tab-label\",htmlFor:\"hr-\".concat(index),children:[\"Recent Hr Questions for \",company]}),/*#__PURE__*/_jsx(\"div\",{class:\"tab-content\",children:selectedCompany===company&&/*#__PURE__*/_jsx(CompanyhrQuestions,{companyName:selectedCompany,questions:hrQuestions,onHide:()=>setShowHRQuestions(true),ishr:true})})]})]})]},index));};return/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-filter-container\",children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"search-bar\",style:{position:'relative',width:\"50%\",marginRight:\"10px\"},children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Search by Company, Year, or Role\",className:\"w-100\",value:query,onChange:event=>setQuery(event.target.value),ref:inputRef,\"aria-label\":\"Search experiences\",\"aria-describedby\":\"search-button\",style:{width:\"95%\"}}),/*#__PURE__*/_jsx(Button,{id:\"search-button\",type:\"submit\",onClick:handleSearch,style:{position:'absolute',right:'0',top:'0',bottom:'0',height:\"45px\",padding:\"5px\",width:\"100px\"},children:\"Search\"})]}),/*#__PURE__*/_jsx(Form.Group,{className:\"filter-group\",style:{width:\"auto\"},children:/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",name:\"company_name\",value:filters.company_name||\"\",onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Companies\"}),companyNames.map((name,index)=>/*#__PURE__*/_jsx(\"option\",{value:name,children:name},index))]})}),/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",name:\"year\",value:filters.year||\"\",onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Years\"}),years.map((year,index)=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},index))]})}),/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",name:\"role_offered\",value:filters.role_offered||\"\",onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Roles\"}),roles.map((role,index)=>/*#__PURE__*/_jsx(\"option\",{value:role,children:role},index))]})}),/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:sortBy,onChange:handleSortChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"created_at\",children:\"Latest\"}),/*#__PURE__*/_jsx(\"option\",{value:\"company_name\",children:\"Company Name\"}),/*#__PURE__*/_jsx(\"option\",{value:\"role_offered\",children:\"Role\"})]})}),/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:sortOrder,onChange:handleSortOrderChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"desc\",children:\"Descending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"asc\",children:\"Ascending\"})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"experiences\",children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):experiences.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No results found\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"experience-results\",children:[(search||filters.company_name)&&RenderCompanyStats(),experiences.map(experience=>/*#__PURE__*/_jsx(ExperienceCard,{experience:experience},experience.experience_id))]})})]});};const ExperienceCard=_ref5=>{let{experience}=_ref5;const{title,description,readMore}=experience;const company=experience.company_name;const rollNo=experience.rollno;const roleOffered=experience.role_offered;const overall_experience=experience.overall_experience;const truncatedOverallExperience=overall_experience.slice(0,130)+'...';const sentimentResult=sentiment.analyze(experience.overall_experience);const sentimentColor=sentimentResult.score>0?'green':sentimentResult.score<0?'red':'grey';const difficultyLevel=getDifficultyLevel([experience]);let difficultyGradient;switch(difficultyLevel){case'Easy':difficultyGradient='linear-gradient(to right, #b9e68c, #69db7c)';break;case'Moderate':difficultyGradient='linear-gradient(to right, #ffeaa7, #ff9f43)';break;case'Difficult':difficultyGradient='linear-gradient(to right, #ff7979, #eb4d4b)';break;default:difficultyGradient='linear-gradient(to right, #dcdde1, #b2bec3)';break;}return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"face face1\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"content\",children:[/*#__PURE__*/_jsx(\"span\",{class:\"stars\"}),/*#__PURE__*/_jsx(\"h2\",{class:\"java\",children:company}),/*#__PURE__*/_jsxs(\"p\",{class:\"java\",children:[\"Educational Criteria : \",experience.educational_criteria]}),/*#__PURE__*/_jsxs(\"p\",{class:\"java\",children:[\"Overall Experience : \",truncatedOverallExperience]}),/*#__PURE__*/_jsx(Link,{to:\"/getexperience/\".concat(experience.experience_id),children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",children:\"Read More\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{class:\"face face2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"face2-company-name\",children:/*#__PURE__*/_jsx(\"h2\",{children:company})}),/*#__PURE__*/_jsxs(\"div\",{className:\"face2-contents\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Role Offered : \",roleOffered]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Batch : \",experience.batch]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:sentimentColor,paddingTop:\"3px\"},className:\"sentiment\",children:[\"Experience was : \",sentimentResult.score>0?'Positive':sentimentResult.score<0?'Negative':'Neutral']}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'5px',marginBottom:'8px',display:'flex',alignItems:'center'},className:\"difficulty\",children:[\"Difficulty : \",difficultyLevel,/*#__PURE__*/_jsx(\"span\",{style:{backgroundImage:difficultyGradient,width:'50px',height:'10px',marginLeft:'10px',display:'inline-block',borderRadius:'5px'},className:\"bar\"})]})]})]})]});};export default SearchExperience;","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","Form","Button","Modal","useNavigate","Link","axios","Sentiment","Doughnut","jsxs","_jsxs","jsx","_jsx","sentiment","calculateSentiment","experiences","totalScore","positiveCount","negativeCount","neutralCount","forEach","experience","result","analyze","overall_experience","score","totalCount","length","positivePercentage","negativePercentage","neutralPercentage","sentimentScore","getDifficultyLevel","getHiringPercentage","hiredCount","placed","CompanyQuestionsModal","_ref","show","handleClose","company","technicalQuestions","setTechnicalQuestions","hrQuestions","setHRQuestions","fetchRecentQuestions","technicalResponse","get","concat","data","hrResponse","error","console","onHide","children","Header","closeButton","Title","Body","map","question","index","Footer","variant","onClick","QuestionsDropdown","_ref2","questions","className","SearchExperience","props","currrollno","history","inputRef","query","setQuery","filters","setFilters","sortBy","setSortBy","sortOrder","setSortOrder","setExperiences","loading","setLoading","token","localStorage","getItem","search","setSearch","companyNames","setCompanyNames","years","setYears","roles","setRoles","showTechnicalQuestions","setShowTechnicalQuestions","showHRQuestions","setShowHRQuestions","selectedCompany","setSelectedCompany","fetchData","response","headers","Authorization","sort","a","b","Date","created_at","companyNamesResponse","Set","company_name","log","yearsResponse","year","rolesResponse","role","role_offered","handleSearch","event","preventDefault","params","handleFilterChange","name","value","target","handleSortChange","handleSortOrderChange","renderHorizontalBar","difficulty","barLength","filledChar","emptyChar","filledLength","barColor","bar","repeat","CompanyhrQuestions","_ref3","companyName","ishr","splitQuestions","questionsString","split","slice","class","id","Fragment","hr_questions","q","idx","CompanyQuestions","_ref4","technical_questions","RenderCompanyStats","companies","exp","push","companyStats","hiring","ctc","low","Math","min","avg","reduce","sum","high","max","handleTechnicalQuestionsClick","fetchRecenttechQuestions","handleHRQuestionsClick","fetchRecenthrQuestions","Object","keys","style","marginTop","paddingLeft","display","flexDirection","justifyContent","labels","datasets","backgroundColor","options","maintainAspectRatio","responsive","plugins","legend","position","title","text","scales","x","grid","y","width","paddingRight","toFixed","type","htmlFor","Group","marginRight","Control","placeholder","onChange","ref","right","top","bottom","height","padding","as","ExperienceCard","experience_id","_ref5","description","readMore","rollNo","rollno","roleOffered","truncatedOverallExperience","sentimentResult","sentimentColor","difficultyLevel","difficultyGradient","educational_criteria","to","batch","color","paddingTop","marginBottom","alignItems","backgroundImage","marginLeft","borderRadius"],"sources":["C:/Users/sushm/OneDrive/Desktop/Git uploads/final_new_front/src/components/Searchexperience.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Card, Form, Button , Modal} from 'react-bootstrap';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Sentiment from 'sentiment';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport 'chartjs-adapter-moment';\r\nimport './Searchexperience.css';\r\n\r\nconst sentiment = new Sentiment();\r\n\r\nconst calculateSentiment = (experiences) => {\r\n  let totalScore = 0;\r\n  let positiveCount = 0;\r\n  let negativeCount = 0;\r\n  let neutralCount = 0;\r\n\r\n  experiences.forEach((experience) => {\r\n    const result = sentiment.analyze(experience.overall_experience);\r\n    totalScore += result.score;\r\n\r\n    if (result.score > 0) {\r\n      positiveCount++;\r\n    } else if (result.score < 0) {\r\n      negativeCount++;\r\n    } else {\r\n      neutralCount++;\r\n    }\r\n  });\r\n\r\n  const totalCount = experiences.length;\r\n  const positivePercentage = (positiveCount / totalCount) * 100;\r\n  const negativePercentage = (negativeCount / totalCount) * 100;\r\n  const neutralPercentage = (neutralCount / totalCount) * 100;\r\n\r\n  return {\r\n    sentimentScore: totalScore / totalCount,\r\n    positivePercentage,\r\n    negativePercentage,\r\n    neutralPercentage,\r\n  };\r\n};\r\n\r\nconst getDifficultyLevel = (experiences) => {\r\n  let totalScore = 0;\r\n\r\n  experiences.forEach((experience) => {\r\n    const result = sentiment.analyze(experience.overall_experience);\r\n    totalScore += result.score;\r\n  });\r\n\r\n  if (totalScore / experiences.length < -2) return 'Difficult';\r\n  if (totalScore / experiences.length > 2) return 'Easy';\r\n  return 'Moderate';\r\n};\r\n\r\nconst getHiringPercentage = (experiences) => {\r\n  let hiredCount = 0;\r\n\r\n  experiences.forEach((experience) => {\r\n    if (experience.placed) {\r\n      hiredCount++;\r\n    }\r\n  });\r\n\r\n  const totalCount = experiences.length;\r\n  return (hiredCount / totalCount) * 100;\r\n};\r\nconst CompanyQuestionsModal = ({ show, handleClose, company }) => {\r\n  const [technicalQuestions, setTechnicalQuestions] = useState([]);\r\n  const [hrQuestions, setHRQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRecentQuestions = async () => {\r\n      try {\r\n        const technicalResponse = await axios.get(`https://backendf-fx8p.onrender.com/experiences/recent-technical-questions/${company}`);\r\n        setTechnicalQuestions(technicalResponse.data);\r\n\r\n        const hrResponse = await axios.get(`https://backendf-fx8p.onrender.com/experiences/recent-hr-questions/${company}`);\r\n        setHRQuestions(hrResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching recent questions:', error);\r\n      }\r\n    };\r\n\r\n    if (show) {\r\n      fetchRecentQuestions();\r\n    }\r\n  }, [show, company]);\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Recent Questions for {company}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h5>Recent Technical Questions:</h5>\r\n        <ul>\r\n          {technicalQuestions.map((question, index) => (\r\n            <li key={index}>{question}</li>\r\n          ))}\r\n        </ul>\r\n        <h5>Recent HR Questions:</h5>\r\n        <ul>\r\n          {hrQuestions.map((question, index) => (\r\n            <li key={index}>{question}</li>\r\n          ))}\r\n        </ul>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst QuestionsDropdown = ({ questions, onHide }) => {\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <ul className=\"dropdown-content\">\r\n        {questions.map((question, index) => (\r\n          <li key={index}>{question}</li>\r\n        ))}\r\n      </ul>\r\n      <Button variant=\"secondary\" onClick={onHide}>\r\n        Close\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst SearchExperience = (props) => {\r\n  const {currrollno}=props;\r\n  const history = useNavigate();\r\n  useEffect(() => {\r\n    if (!currrollno) {\r\n      // Redirect to sign-in if currrollno is null\r\n      history('/');\r\n    }\r\n  }, [currrollno]);\r\n  const inputRef = useRef(null);\r\n  const [query, setQuery] = useState('');\r\n  const [filters, setFilters] = useState({});\r\n  const [sortBy, setSortBy] = useState('created_at');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n \r\n  const token = localStorage.getItem('token');\r\n  const [search, setSearch]=useState(false)\r\n  const [companyNames, setCompanyNames] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n  const [showTechnicalQuestions, setShowTechnicalQuestions] = useState(false);\r\n  const [showHRQuestions, setShowHRQuestions] = useState(false);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n  const [technicalQuestions, setTechnicalQuestions] = useState([]);\r\n  const [hrQuestions, setHRQuestions] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`https://backendf-fx8p.onrender.com/experiences/experience`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setExperiences(response.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)));\r\n        setLoading(false);\r\n\r\n        // Fetch unique company names, years, and roles from the database\r\n        const companyNamesResponse = await axios.get(`https://backendf-fx8p.onrender.com/experiences/experience`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        //const coresponse = await axios.get('https://backendf-fx8p.onrender.com/experiences');\r\n        const companyNames = [...new Set(companyNamesResponse.data.map((experience) => experience.company_name))];\r\n        setCompanyNames(companyNames);\r\n         console.log(\"company names : \", companyNames);\r\n        const yearsResponse = await axios.get(`https://backendf-fx8p.onrender.com/experiences/years`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setYears(yearsResponse.data.map(year => year.year));\r\n\r\n        const rolesResponse = await axios.get(`https://backendf-fx8p.onrender.com/experiences/roles`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setRoles(rolesResponse.data.map(role => role.role_offered));\r\n      } catch (error) {\r\n        console.error('Error fetching experiences:', error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []); \r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n     \r\n      console.log(\"filters : \", filters);\r\n      console.log(\"sortby : \", sortBy);\r\n      console.log(\"sortOrder : \", sortOrder);\r\n      const response = await axios.get(`https://backendf-fx8p.onrender.com/experiences/search`, {\r\n        params: {\r\n          query,\r\n          filters,\r\n          sortBy,\r\n          sortOrder,\r\n        },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      query.length>0 ? setSearch(true) : setSearch(false);\r\n    \r\n      setExperiences(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error searching experiences:', error);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFilters({...filters, [name]: value });\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n\r\n  const handleSortOrderChange = (event) => {\r\n    setSortOrder(event.target.value);\r\n  };\r\n  const renderHorizontalBar = (difficulty) => {\r\n    const barLength = 10; // total length of the bar\r\n    const filledChar = '█';\r\n    const emptyChar = '▒';\r\n    let filledLength = 0;\r\n    let barColor = '';\r\n  \r\n    switch (difficulty) {\r\n      case 'Easy':\r\n        filledLength = 4;\r\n        barColor = '#4CAF50';  // green\r\n        break;\r\n      case 'Moderate':\r\n        filledLength = 7;\r\n        barColor = '#FFEB3B';  // yellow\r\n        break;\r\n      case 'Difficult':\r\n        filledLength = 10;\r\n        barColor = '#F44336';  // red\r\n        break;\r\n      default:\r\n        filledLength = 0;\r\n        break;\r\n    }\r\n  \r\n    const bar = filledChar.repeat(filledLength) + emptyChar.repeat(barLength - filledLength);\r\n  \r\n    return (\r\n      <div className=\"horizontal-bar\" >\r\n        {difficulty}: {bar}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  const CompanyhrQuestions = ({ companyName, questions, onHide, ishr }) => {\r\n    console.log(\"in company question\")\r\n    console.log(\"questions : \", questions)\r\n   // console.log(typeof(questions[0].hr_questions))\r\n    // Function to split questions string into an array of individual questions\r\n   // fetchRecenthrQuestions(companyName);\r\n    const splitQuestions = (questionsString) => {\r\n      console.log(\"called split function\")\r\n      return  questionsString && typeof questionsString==='string' ? questionsString.split('\\n').slice(0,5) : [] ;\r\n    };\r\n   console.log(ishr)\r\n    return (\r\n      <div class=\"\">\r\n  <div class=\"\" id=\"menu-toggle\">       \r\n   {ishr?\r\n  <ul>\r\n         {   questions.map((question, index) => (\r\n                  \r\n                  <React.Fragment key={index}>\r\n                    { question.hr_questions && typeof question.hr_questions==='string' && splitQuestions(question.hr_questions).map((q, idx) => (\r\n                      <li key={`${index}-${idx}`}>{q}</li>\r\n                    ))}\r\n                  </React.Fragment>\r\n                ))\r\n  }\r\n          </ul>\r\n          :\r\n          {\r\n\r\n          }\r\n}\r\n  </div>\r\n  \r\n\r\n</div>\r\n    );\r\n  };\r\n  \r\n  const CompanyQuestions = ({ companyName, questions, onHide, ishr }) => {\r\n    console.log(\"in company question\")\r\n    console.log(\"questions : \", questions)\r\n   // fetchRecenttechQuestions(companyName);\r\n   // console.log(typeof(questions[0].hr_questions))\r\n    // Function to split questions string into an array of individual questions\r\n    const splitQuestions = (questionsString) => {\r\n      console.log(\"called split function\")\r\n      return  questionsString && typeof questionsString==='string' ? questionsString.split('\\n').slice(0,5) : [] ;\r\n    };\r\n   console.log(ishr)\r\n    return (\r\n      <div class=\"\">\r\n  <div class=\"\" id=\"menu-toggle\">\r\n   \r\n  <ul>\r\n            \r\n              { questions.map((question, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {question.technical_questions && typeof question.technical_questions === 'string' && splitQuestions(question.technical_questions).map((q, idx) => (\r\n                      <li key={`${index}-${idx}`}>{q}</li>\r\n                    ))}\r\n                  </React.Fragment>\r\n                ))}\r\n          </ul>\r\n  </div>\r\n  \r\n\r\n</div>\r\n    );\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const RenderCompanyStats = () => {\r\n   \r\n    const companies = {};\r\n    experiences.forEach(exp => {\r\n      if (!companies[exp.company_name]) {\r\n        companies[exp.company_name] = [];\r\n      }\r\n      companies[exp.company_name].push(exp);\r\n    });\r\n  \r\n    const companyStats = {};\r\n    for (let company in companies) {\r\n      companyStats[company] = {\r\n        sentiment: calculateSentiment(companies[company]),\r\n        difficulty: getDifficultyLevel(companies[company]),\r\n        hiring: getHiringPercentage(companies[company]),\r\n       \r\n          ctc: {\r\n            low: Math.min(...companies[company].map(exp => exp.ctc)),\r\n            avg: companies[company].reduce((sum, exp) => sum + exp.ctc, 0) / companies[company].length,\r\n            high: Math.max(...companies[company].map(exp => exp.ctc))\r\n          }\r\n        \r\n      };\r\n    }\r\n  \r\n    const handleTechnicalQuestionsClick = (company) => {\r\n      console.log(\"company tech: \", company)\r\n      \r\n      setSelectedCompany(company);\r\n      // Fetch recent technical questions for the selected company from the backend\r\n      // Update the technicalQuestions state\r\n      const fetchRecenttechQuestions = async () => {\r\n        try {\r\n          const technicalResponse = await axios.get(`https://backendf-fx8p.onrender.com/experiences/recent-technical-questions/${company}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n          \r\n          setTechnicalQuestions(technicalResponse.data);\r\n    \r\n        } catch (error) {\r\n          console.error('Error fetching recent questions:', error);\r\n        }\r\n      };\r\n      fetchRecenttechQuestions();\r\n     //showTechnicalQuestions===false? setShowTechnicalQuestions(true) : setShowTechnicalQuestions(false);\r\n    };\r\n  \r\n    const handleHRQuestionsClick = (company) => {\r\n      console.log(\"in handle hr : \", company)\r\n      const fetchRecenthrQuestions = async () => {\r\n        try {\r\n         \r\n          const hrResponse = await axios.get(`https://backendf-fx8p.onrender.com/experiences/recent-hr-questions/${company}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n          setHRQuestions(hrResponse.data);\r\n        } catch (error) {\r\n          console.error('Error fetching recent questions:', error);\r\n        }\r\n      };\r\n      setSelectedCompany(company);\r\n      // Fetch recent HR questions for the selected company from the backend\r\n      // Update the hrQuestions state\r\n      fetchRecenthrQuestions();\r\n    // showHRQuestions===false? setShowHRQuestions(true) : setShowHRQuestions(false);\r\n      console.log(\"Show hr \", showHRQuestions)\r\n    };\r\n  \r\n    return Object.keys(companyStats).map((company, index) => (\r\n      <div key={index} style={{ marginTop: '20px' }} className='companystats-container'>\r\n        <div className='company-title'>\r\n\r\n        <h2 style={{paddingLeft:\"20%\"}}>{company}</h2>\r\n    \r\n        </div>\r\n        <div key={index} style={{ marginTop: '20px', display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\" }}>\r\n          <div className=\"doughnut-chart-container\">\r\n          <Doughnut \r\n            data={{\r\n              labels: ['Positive', 'Neutral', 'Negative'],\r\n              datasets: [{\r\n                data: [\r\n                  companyStats[company].sentiment.positivePercentage,\r\n                  companyStats[company].sentiment.neutralPercentage,\r\n                  companyStats[company].sentiment.negativePercentage\r\n                ],\r\n                backgroundColor: ['green', 'grey', 'red']\r\n              }]\r\n            }}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              responsive: true,\r\n              plugins: {\r\n                legend: {\r\n                  position: 'top',\r\n                },\r\n                title: {\r\n                  display: true,\r\n                  text: 'Sentiment Analysis',\r\n                },\r\n              },\r\n              scales: {\r\n                x: {\r\n                  grid: {\r\n                    display: false,\r\n                  },\r\n                },\r\n                y: {\r\n                  grid: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n          <div style={{display:\"flex\", flexDirection:\"column\", justifyContent : \"space-between\", width : \"40%\"}}>\r\n            <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>Difficulty: {renderHorizontalBar(companyStats[company].difficulty)} </div>\r\n            <div style={{paddingRight:\"5px\"}}>Hiring Percentage: {companyStats[company].hiring.toFixed(2)}%</div> \r\n            <div>CTC Range: {companyStats[company].ctc.low.toFixed(2)} - {companyStats[company].ctc.avg.toFixed(2)} - {companyStats[company].ctc.high.toFixed(2)}</div>\r\n            \r\n          </div>\r\n        \r\n        </div>\r\n       \r\n       \r\n        <div class=\"tabs\">\r\n      <div class=\"tab\">\r\n        <input className='tabsinput' type=\"checkbox\" id={`tech-${index}`} onClick={() => handleTechnicalQuestionsClick(company)}/>\r\n        <label class=\"tab-label\" htmlFor={`tech-${index}`}>Recent Technical Questions for {company}</label>\r\n        <div class=\"tab-content\">\r\n        { selectedCompany === company && (\r\n          <CompanyQuestions\r\n            companyName={selectedCompany}\r\n            questions={technicalQuestions}\r\n            onHide={() => setShowTechnicalQuestions(true)}\r\n            ishr={false}\r\n          />\r\n        )}\r\n        </div>\r\n      </div>\r\n      <div class=\"tab\">\r\n        <input className='tabsinput' type=\"checkbox\" id={`hr-${index}`} onClick={() => handleHRQuestionsClick(company)}/>\r\n        <label class=\"tab-label\" htmlFor={`hr-${index}`}>Recent Hr Questions for {company}</label>\r\n        <div class=\"tab-content\">\r\n        { selectedCompany === company && (\r\n          <CompanyhrQuestions\r\n            companyName={selectedCompany}\r\n            questions={hrQuestions}\r\n            onHide={() => setShowHRQuestions(true)}\r\n            ishr={true}\r\n          />\r\n        )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n      </div>\r\n      \r\n    ));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className='search-container'>\r\n      <div className=\"search-filter-container\">\r\n        <Form.Group className=\"search-bar\" style={{ position: 'relative', width: \"50%\", marginRight: \"10px\" }}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Search by Company, Year, or Role\"\r\n            className=\"w-100\"\r\n            value={query}\r\n            onChange={(event) => setQuery(event.target.value) }\r\n            ref={inputRef}\r\n            aria-label=\"Search experiences\"\r\n            aria-describedby=\"search-button\"\r\n            style={{ width: \"95%\" }}\r\n          />\r\n          <Button id=\"search-button\" type=\"submit\" onClick={handleSearch}  style={{ position: 'absolute', right: '0', top: '0', bottom: '0', height: \"45px\", padding: \"5px\", width: \"100px\" }}>\r\n            Search\r\n          </Button>\r\n        </Form.Group>\r\n        <Form.Group className=\"filter-group\" style={{ width: \"auto\" }}>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"company_name\"\r\n            value={filters.company_name || \"\"}\r\n            onChange={handleFilterChange}\r\n          >\r\n            <option value=\"\">All Companies</option>\r\n            {companyNames.map((name, index) => (\r\n              <option key={index} value={name}>{name}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"year\"\r\n            value={filters.year || \"\"}\r\n            onChange={handleFilterChange}\r\n          >\r\n            <option value=\"\">All Years</option>\r\n            {years.map((year, index) => (\r\n              <option key={index} value={year}>{year}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"role_offered\"\r\n            value={filters.role_offered || \"\"}\r\n            onChange={handleFilterChange}\r\n          >\r\n            <option value=\"\">All Roles</option>\r\n            {roles.map((role, index) => (\r\n              <option key={index} value={role}>{role}</option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control as=\"select\" value={sortBy} onChange={handleSortChange}>\r\n            <option value=\"created_at\">Latest</option>\r\n            <option value=\"company_name\">Company Name</option>\r\n            <option value=\"role_offered\">Role</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control as=\"select\" value={sortOrder} onChange={handleSortOrderChange}>\r\n            <option value=\"desc\">Descending</option>\r\n            <option value=\"asc\">Ascending</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </div>\r\n      <div className=\"experiences\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : experiences.length === 0 ? (\r\n          <p>No results found</p>\r\n        ) : (\r\n          <div className='experience-results'>\r\n            {(search || filters.company_name) && RenderCompanyStats()}\r\n            {experiences.map((experience) => (\r\n              <ExperienceCard key={experience.experience_id} experience={experience} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst ExperienceCard = ({ experience }) => {\r\n  const { title, description, readMore } = experience;\r\n  const company = experience.company_name;\r\n  const rollNo = experience.rollno;\r\n  const roleOffered = experience.role_offered;\r\n  const overall_experience = experience.overall_experience;\r\n  const truncatedOverallExperience = overall_experience.slice(0, 130) + '...';\r\n\r\n  const sentimentResult = sentiment.analyze(experience.overall_experience);\r\n  const sentimentColor = sentimentResult.score > 0 ? 'green' : sentimentResult.score < 0 ? 'red' : 'grey';\r\n\r\n  const difficultyLevel = getDifficultyLevel([experience]);\r\n  let difficultyGradient;\r\n\r\n  switch (difficultyLevel) {\r\n    case 'Easy':\r\n      difficultyGradient = 'linear-gradient(to right, #b9e68c, #69db7c)';\r\n      break;\r\n    case 'Moderate':\r\n      difficultyGradient = 'linear-gradient(to right, #ffeaa7, #ff9f43)';\r\n      break;\r\n    case 'Difficult':\r\n      difficultyGradient = 'linear-gradient(to right, #ff7979, #eb4d4b)';\r\n      break;\r\n    default:\r\n      difficultyGradient = 'linear-gradient(to right, #dcdde1, #b2bec3)';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className='card'>\r\n    {/*}\r\n    <Card className=\"experiencecard\" style={{ width: \"95%\" }}>\r\n      <Card.Body>\r\n        <Card.Title style={{ fontSize: \"x-large\", fontWeight: \"-moz-initial\", paddingBottom:\"2px\" }}>{company}</Card.Title>\r\n        <Card.Text style={{paddingTop:\"3px\"}}>Batch : {experience.batch}</Card.Text>\r\n        <Card.Text style={{paddingTop:\"3px\"}}>Role Offered : {roleOffered}</Card.Text>\r\n        <Card.Text style={{paddingTop:\"3px\"}}>{truncatedOverallExperience}</Card.Text>\r\n        <div style={{ color: sentimentColor, paddingTop:\"3px\" }}>\r\n          Sentiment: {sentimentResult.score > 0 ? 'Positive' : sentimentResult.score < 0 ? 'Negative' : 'Neutral'}\r\n        </div>\r\n        <div style={{ marginTop: '5px', marginBottom:'8px',display: 'flex', alignItems: 'center' }}>\r\n          Difficulty : {difficultyLevel}\r\n          <span \r\n            style={{ \r\n              backgroundImage: difficultyGradient,\r\n              width: '50px', \r\n              height: '10px', \r\n              marginLeft: '10px', \r\n              display: 'inline-block',\r\n              borderRadius: '5px'\r\n            }}>\r\n          </span>\r\n        </div>\r\n        <Link to={`/getexperience/${experience.experience_id}`}>\r\n          <Button variant=\"primary\">Read More</Button>\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n          */}\r\n<div class=\"face face1\">\r\n      <div class=\"content\">\r\n        <span class=\"stars\"></span>\r\n        <h2 class=\"java\">{company}</h2>\r\n        <p class=\"java\">Educational Criteria : {experience.educational_criteria}</p>\r\n        <p class=\"java\">Overall Experience : {truncatedOverallExperience}</p>\r\n       <Link to={`/getexperience/${experience.experience_id}`}>\r\n          <Button variant=\"primary\">Read More</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n    <div class=\"face face2\">\r\n      <div className='face2-company-name'>\r\n      <h2>{company}</h2>\r\n      </div>\r\n      <div className='face2-contents'>\r\n      <h4>Role Offered : {roleOffered}</h4>\r\n      <h4>Batch : {experience.batch}</h4>\r\n      <div style={{ color: sentimentColor, paddingTop:\"3px\" }} className='sentiment'>\r\n          Experience was : {sentimentResult.score > 0 ? 'Positive' : sentimentResult.score < 0 ? 'Negative' : 'Neutral'}\r\n        </div>\r\n        <div style={{ marginTop: '5px', marginBottom:'8px',display: 'flex', alignItems: 'center' }} className='difficulty'>\r\n          Difficulty : {difficultyLevel}\r\n          <span \r\n            style={{ \r\n              backgroundImage: difficultyGradient,\r\n              width: '50px', \r\n              height: '10px', \r\n              marginLeft: '10px', \r\n              display: 'inline-block',\r\n              borderRadius: '5px'\r\n            }} className='bar'>\r\n          </span>\r\n        </div>\r\n        \r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n  );\r\n};\r\n\r\nexport default SearchExperience;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}